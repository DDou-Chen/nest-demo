# 每个 services 都是一个 docker 容器，名字随便指定。
# 指定了 nest-app、mysql-container、reids-container 3 个service：

# 然后 nest-app 配置了 depends_on 其他两个 service。

# 这样 docker-compose 就会先启动另外两个，再启动这个，这样就能解决顺序问题。

# 然后 mysql-container、redis-container 的 service 指定了 image 和 ports、volumes 的映射，这些都很容易看懂。

# mysql 容器跑的时候还要指定 MYSQL_DATABASE 和 MYSQL_ROOT_PASSWORD 环境变量。

# MYSQL_ROOT_PASSWORD 是 root 用户的密码，MYSQL_DATABASE 是会自动创建的 database。

# nest-app 指定了 context 下的 dockerfile 路径，端口映射。

# 然后我们通过 docker-compose up 把它跑起来：

services:
  nest-app:
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      - mysql-container
      - redis-container
    ports:
      - '3000:3000'
  mysql-container:
    image: mysql
    ports:
      - '3306:3306'
    volumes:
      - D:\Volumes\mysql-test:/var/lib/mysql
    environment:
      MYSQL_DATABASE: acl-test
      MYSQL_ROOT_PASSWORD: root
  redis-container:
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - D:\Volumes\redis-test:/data
